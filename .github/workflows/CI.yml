name: CI
on:
  push:
    branches-ignore:
      - 'gh-pages'

jobs:
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: TOC Generator
        uses: technote-space/toc-generator@v2.5
        with:
          TOC_TITLE: '## Table of contents'
          MAX_HEADER_LEVEL: 3
  test:
    name: Tests
    needs: [docs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node.js
        shell: bash -l {0}
        run: nvm install

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Run unit tests
        run: 'yarn test --coverage --ci'

      - name: Report coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  lint:
    name: Linting
    needs: [docs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node.js
        shell: bash -l {0}
        run: nvm install

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Lint files
        run: yarn lint
  types:
    name: Types
    needs: [docs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node.js
        shell: bash -l {0}
        run: nvm install

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Check types
        run: yarn tsc
  build:
    name: Build
    needs: [docs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2.1.1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Build package
        run: yarn build

      - name: Save build
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  release:
    name: Release
    needs: [build, test, lint, types]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Use Node.js
        shell: bash -l {0}
        run: nvm install
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
      - name: Fetch build
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
